{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuli\\\\FullStack\\\\Osa-1\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [clicks, setClicks] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0\n  });\n  const all = clicks.good + clicks.bad + clicks.neutral;\n  const average = (clicks.good + clicks.bad * -1) / all || 0;\n  const positive = clicks.good / all * 100 || 0;\n\n  const handlegoodClick = () => setClicks({ ...clicks,\n    good: clicks.good + 1\n  });\n\n  const handleneutralClick = () => setClicks({ ...clicks,\n    neutral: clicks.neutral + 1\n  });\n\n  const handlebadClick = () => setClicks({ ...clicks,\n    bad: clicks.bad + 1\n  });\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Give Feedback\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handlegoodClick,\n    text: \"good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleneutralClick,\n    text: \"neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handlebadClick,\n    text: \"bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \" Statistics \"), /*#__PURE__*/React.createElement(Statistics, {\n    clicks: clicks,\n    all: all,\n    average: average,\n    positive: positive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Button = ({\n  onClick,\n  text\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }\n}, text);\n\nconst Statistics = props => {\n  if (props.all == 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, \"No feedback given\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StatisticLine, {\n    text: \"good\",\n    value: props.clicks.good,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StatisticLine, {\n    text: \"neutral\",\n    value: props.clicks.neutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StatisticLine, {\n    text: \"bad\",\n    value: props.clicks.bad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  })))));\n};\n\nconst StatisticLine = ({\n  text,\n  value\n}) => {\n  if (text == \"positive\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, text, \" \"), \" \", /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 26\n      }\n    }, value, \" \"), \" %\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, text, \" \"), \" \", /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 24\n    }\n  }, value, \" \"));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Samuli/FullStack/Osa-1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","App","good","setGood","neutral","setNeutral","bad","setBad","clicks","setClicks","all","average","positive","handlegoodClick","handleneutralClick","handlebadClick","Button","onClick","text","Statistics","props","StatisticLine","value","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [clicks, setClicks] = useState({\n    good: 0, neutral: 0, bad: 0\n  })\n\n  const all = clicks.good + clicks.bad + clicks.neutral\n\n  const average = (clicks.good + (clicks.bad * (-1))) / all || 0\n\n  const positive = clicks.good / all * 100 || 0\n\n\n\n  const handlegoodClick = () =>\n    setClicks({ ...clicks, good: clicks.good + 1 })\n\n  const handleneutralClick = () =>\n    setClicks({ ...clicks, neutral: clicks.neutral + 1 })\n\n  const handlebadClick = () =>\n    setClicks({ ...clicks, bad: clicks.bad + 1 })\n\n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <div>\n        <Button onClick={handlegoodClick} text=\"good\" />\n        <Button onClick={handleneutralClick} text=\"neutral\" />\n        <Button onClick={handlebadClick} text=\"bad\" />\n\n      </div>\n      <h1> Statistics </h1>\n\n      <Statistics clicks={clicks} all={all} average={average} positive={positive} />\n    </div>\n  )\n}\n\nconst Button = ({ onClick, text }) => (\n  <button onClick={onClick}>\n    {text}\n  </button>\n)\n\n\nconst Statistics = (props) => {\n  if (props.all == 0) {\n    return (\n      <div>\n        No feedback given\n      </div>\n    )\n  }\n  return (\n    <>\n      <table>\n        <td>\n          <tr><StatisticLine text=\"good\" value={props.clicks.good} /></tr>\n          <tr><StatisticLine text=\"neutral\" value={props.clicks.neutral} /></tr>\n          <tr><StatisticLine text=\"bad\" value={props.clicks.bad} /></tr>\n\n\n\n\n        </td>\n      </table>\n\n\n    </>\n\n  )\n\n}\n\nconst StatisticLine = ({ text, value }) => {\n\n  if (text == \"positive\") {\n    return (\n      <div>\n        <td>{text} </td> <td>{value} </td> %\n      </div>\n    )\n  }\n  return (\n    <div>\n      <td>{text} </td> <td>{value} </td>\n    </div>\n  )\n}\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}