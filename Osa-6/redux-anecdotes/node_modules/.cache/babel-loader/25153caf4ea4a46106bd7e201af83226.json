{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport anecdoteReducer, { initializeAnecdotes } from './reducers/anecdoteReducer';\nimport notificationReducer from './reducers/notificationReducer';\nimport anecdoteService from './services/anecdotes';\nimport thunk from 'redux-thunk';\nconst reducer = combineReducers({\n  anecdotes: anecdoteReducer,\n  notifications: notificationReducer\n});\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\nanecdoteService.getAll().then(anecdotes => store.dispatch(initializeAnecdotes(anecdotes)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Samuli/FullStack/Osa-6/redux-anecdotes/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","composeWithDevTools","anecdoteReducer","initializeAnecdotes","notificationReducer","anecdoteService","thunk","reducer","anecdotes","notifications","store","getAll","then","dispatch"],"mappings":"AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,IAA0BC,mBAA1B,QAAqD,4BAArD;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AAGA,MAAMC,OAAO,GAAGR,eAAe,CAAC;AAC9BS,EAAAA,SAAS,EAAEN,eADmB;AAE9BO,EAAAA,aAAa,EAAEL;AAFe,CAAD,CAA/B;AAQA,MAAMM,KAAK,GAAGZ,WAAW,CACvBS,OADuB,EAEvBN,mBAAmB,CAACD,eAAe,CAACM,KAAD,CAAhB,CAFI,CAAzB;AAMAD,eAAe,CAACM,MAAhB,GAAyBC,IAAzB,CAA8BJ,SAAS,IAErCE,KAAK,CAACG,QAAN,CAAeV,mBAAmB,CAACK,SAAD,CAAlC,CAFF;AAQA,eAAeE,KAAf","sourcesContent":["\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport anecdoteReducer, { initializeAnecdotes } from './reducers/anecdoteReducer'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport anecdoteService from './services/anecdotes'\r\n\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nconst reducer = combineReducers({\r\n  anecdotes: anecdoteReducer,\r\n  notifications: notificationReducer\r\n\r\n})\r\n\r\n\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n\r\n)\r\n\r\nanecdoteService.getAll().then(anecdotes =>\r\n\r\n  store.dispatch(initializeAnecdotes(anecdotes))\r\n)\r\n   \r\n\r\n\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}